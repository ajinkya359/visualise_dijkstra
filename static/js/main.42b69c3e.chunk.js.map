{"version":3,"sources":["components/Node.js","algorithms/dykstra.js","components/Grid.js","App.js","index.js"],"names":["Node","props","handleClick","e","onClick","row","col","state","extraClassname","this","isVisited","isStart","isEnd","className","id","React","Component","dykstra","grid","start_row","start_col","end_row","end_col","queue","order","i","length","j","parent","distance","Infinity","push","sort","a","b","temp","shift","max","start_node_row","start_node_col","end_node_row","end_node_col","Grid","set","reset","handleReset","document","getElementById","setState","console","log","visualise","bind","setToStart","setToEnd","setTimeout","current","g","key","map","idr","idc","App","ReactDOM","render","StrictMode"],"mappings":"ySAmCeA,G,wDAhCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,YAAY,SAACC,GACT,EAAKF,MAAMG,QAAQ,EAAKH,MAAMI,IAAI,EAAKJ,MAAMK,MAN7C,EAAKC,MAAM,GAFG,E,qDAcd,IAAIC,EAYJ,OAPGC,KAAKR,MAAMS,YACVF,EAAe,WAChBC,KAAKR,MAAMU,UACVH,EAAe,cAChBC,KAAKR,MAAMW,QACVJ,EAAe,YAGf,yBAAKK,UAAS,eAAUL,GAAkBM,GAAE,UAAKL,KAAKR,MAAMI,IAAhB,YAAuBI,KAAKR,MAAMK,KAAOF,QAASK,KAAKP,kB,GA5B5Fa,IAAMC,Y,MCDlB,SAASC,EAAQC,EAAKC,EAAUC,EAAUC,EAAQC,GAIrD,IAHA,IAAIC,EAAM,GACNC,EAAM,GAEFC,EAAE,EAAEA,EAAEP,EAAKQ,OAAOD,IAEtB,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAK,GAAGQ,OAAOC,IACzBT,EAAKO,GAAGE,GAAGC,OAAO,KAClBV,EAAKO,GAAGE,GAAGE,SAASC,IACpBP,EAAMQ,KAAKb,EAAKO,GAAGE,IAK3B,IAFAT,EAAKC,GAAWC,GAAWS,SAAS,EAE9BN,EAAMG,QACZ,CACIH,EAAMS,MAAK,SAACC,EAAEC,GAAK,OAAOD,EAAEJ,SAASK,EAAEL,SAAS,GAAG,KACnD,IAAIM,EAAKZ,EAAM,GA0Df,GAzDAA,EAAMa,QACQ,IAAXD,EAAK9B,KAAS8B,EAAK9B,MAAMa,EAAKQ,OAAO,EAEtB,IAAXS,EAAK7B,KAEJ+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAE/C6B,EAAK7B,MAAMY,EAAK,GAAGQ,OAAO,GAE9BW,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,QAGvD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAGnC,IAAX6B,EAAK9B,IACI,IAAX8B,EAAK7B,KAEJ+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAE/C6B,EAAK7B,MAAMY,EAAK,GAAGQ,OAAO,GAE9BW,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,QAGnD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAIzC,IAAX6B,EAAK7B,KAEJ+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAE/C6B,EAAK7B,MAAMY,EAAK,GAAGQ,OAAO,GAE9BW,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,QAGnD+B,EAAInB,EAAKiB,EAAK9B,IAAI,GAAG8B,EAAK7B,KAAKY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,MACnD+B,EAAInB,EAAKiB,EAAK9B,KAAK8B,EAAK7B,IAAI,GAAGY,EAAKiB,EAAK9B,KAAK8B,EAAK7B,OAG3DkB,EAAMO,KAAKI,GACRA,EAAK9B,MAAMgB,GAASc,EAAK7B,MAAMgB,EAC9B,MAMR,OAAOE,EAEX,SAASa,EAAIJ,EAAEC,GACRD,EAAEJ,SAASK,EAAEL,SAAS,IACrBI,EAAEJ,SAASK,EAAEL,SAAS,EACtBI,EAAEL,OAAOM,GCpFjB,IACII,EAAe,GACfC,EAAe,GACfC,EAAa,GACbC,EAAa,GA6KFC,E,kDA1KX,WAAYzC,GACX,IAAD,8BACI,cAAMA,IAkBVC,YAAY,SAACG,EAAIC,GAQb,IAaQ6B,EApBJ,EAAK5B,MAAMoC,KAIZ,EAAKpC,MAAMqC,OACd,EAAKC,cACe,IAAjB,EAAKtC,MAAMoC,MACVR,EAAK,EAAK5B,MAAMW,MACf,EAAKX,MAAM+B,gBAAgBC,GAAgB5B,SAAQ,EACxDwB,EAAK9B,GAAKC,GAAKK,SAAQ,EACvBmC,SAASC,eAAT,UAA2B,EAAKxC,MAAM+B,eAAtC,YAAwD,EAAK/B,MAAMgC,iBAAkB1B,UAAU,OAC/FiC,SAASC,eAAT,UAA2B,EAAKxC,MAAM+B,eAAtC,YAAwD,EAAK/B,MAAMgC,iBAAkB5B,SAAQ,EAC7FmC,SAASC,eAAT,UAA2B1C,EAA3B,YAAkCC,IAAOO,UAAU,kBACnDiC,SAASC,eAAT,UAA2B1C,EAA3B,YAAkCC,IAAOK,SAAQ,EACjD2B,EAAejC,EACfkC,EAAejC,EACf,EAAK0C,SAAS,CAACV,eAAejC,EAAIkC,eAAejC,EAAIY,KAAKiB,IAC1Dc,QAAQC,IAAI,cAGJf,EAAK,EAAK5B,MAAMW,MACnB,EAAKX,MAAMiC,cAAcC,GAAc7B,OAAM,EAClDuB,EAAK9B,GAAKC,GAAKM,OAAM,EACrBkC,SAASC,eAAT,UAA2B,EAAKxC,MAAMiC,aAAtC,YAAsD,EAAKjC,MAAMkC,eAAgB5B,UAAU,OAC3FiC,SAASC,eAAT,UAA2B,EAAKxC,MAAMiC,aAAtC,YAAsD,EAAKjC,MAAMkC,eAAgB7B,OAAM,EACvFkC,SAASC,eAAT,UAA2B1C,EAA3B,YAAkCC,IAAOO,UAAU,mBACnDiC,SAASC,eAAT,UAA2B1C,EAA3B,YAAkCC,IAAOM,OAAM,EAC/C4B,EAAanC,EACboC,EAAanC,EACb,EAAK0C,SAAS,CAACR,aAAanC,EAAIoC,aAAanC,EAAIY,KAAKiB,IACtDc,QAAQC,IAAI,aA7BRD,QAAQC,IAAI,uBAnBhB,EAAK3C,MAAM,CACPW,KAAK,GACLyB,IAAI,KACJC,OAAM,EACNN,eAAeA,EACfC,eAAeA,EACfC,aAAcA,EACdC,aAAaA,GAEjB,EAAKU,UAAU,EAAKA,UAAUC,KAAf,gBACf,EAAKP,YAAY,EAAKA,YAAYO,KAAjB,gBACjB,EAAKlD,YAAY,EAAKA,YAAYkD,KAAjB,gBACjB,EAAKC,WAAW,EAAKA,WAAWD,KAAhB,gBAChB,EAAKE,SAAS,EAAKA,SAASF,KAAd,gBAflB,E,wDAsDG3C,KAAKF,MAAMqC,OAEVnC,KAAKoC,cAETpC,KAAKuC,SAAS,CAACJ,OAAM,IAIjB,IAHJ,IAAIT,EAAK1B,KAAKF,MAAMW,KACdM,EAAMP,EAAQkB,EAAKG,EAAeC,EAAeC,EAAaC,GAPzD,WASChB,GAGR,GAAGA,IAAID,EAAME,OAUT,OATA6B,YAAW,WAEP,IADA,IAAIC,EAAQrB,EAAKK,GAAcC,GAAcb,QACtC4B,EAAQ7C,SAEXsC,QAAQC,IAAIM,GACZV,SAASC,eAAT,UAA2BS,EAAQnD,IAAnC,YAA0CmD,EAAQlD,MAAOO,UAAU,YACnE2C,EAAQA,EAAQ5B,SAEtB,GAAGH,GACC,CAAN,UAEJ8B,YAAW,WACPT,SAASC,eAAT,UAA2BvB,EAAMC,GAAGpB,IAApC,YAA2CmB,EAAMC,GAAGnB,MAAOO,UAAU,eACrEiC,SAASC,eAAT,UAA2BT,EAA3B,YAA6CC,IAAkB1B,UAAU,kBACzEiC,SAASC,eAAT,UAA2BP,EAA3B,YAA2CC,IAAgB5B,UAAU,kBACvE,GAAGY,IAnBGA,EAAE,EAAEA,GAAGD,EAAME,OAAOD,IAC7B,CAAC,IAAD,IADSA,GACT,qC,mCA2BChB,KAAKuC,SAAS,CAACL,IAFL,M,iCAMVlC,KAAKuC,SAAS,CAACL,IADL,M,oCAKV,IACMnB,EAAMP,EADHR,KAAKF,MAAMW,KACKoB,EAAeC,EAAeC,EAAaC,GACpE,GAAGjB,EAAME,OAET,IADC,IAAD,WACQD,GACR8B,YAAW,WACPT,SAASC,eAAT,UAA2BvB,EAAMC,GAAGpB,IAApC,YAA2CmB,EAAMC,GAAGnB,MAAOO,UAAU,OACrEiC,SAASC,eAAT,UAA2BT,EAA3B,YAA6CC,IAAkB1B,UAAU,kBACzEiC,SAASC,eAAT,UAA2BP,EAA3B,YAA2CC,IAAgB5B,UAAU,kBACvE,GAAGY,IALGA,EAAED,EAAME,OAAO,EAAED,GAAG,EAAEA,IAAK,EAA3BA,K,0CAcR,IADA,IAAIgC,EAAE,GACEpD,EAAI,EAAEA,EA5HX,GA4HoBA,IACvB,CAEI,IADA,IAAI8B,EAAK,GACD7B,EAAI,EAAEA,EA1HZ,GA0HwBA,IAClB6B,EAAKJ,KACC,CACE1B,IAAIA,EACJuB,OAAO,KACPtB,IAAIA,EACJoD,IAAQ,GAAJrD,EAAOC,EACXK,QAAQN,IAAMI,KAAKF,MAAM+B,gBAAgBhC,IAAMG,KAAKF,MAAMgC,eAC1D3B,MAAMP,IAAMI,KAAKF,MAAMiC,cAAclC,IAAMG,KAAKF,MAAMkC,aACtD3B,GAAO,GAAJT,EAAOC,EACVuB,SAASC,IACTpB,WAAU,IAI1B+C,EAAE1B,KAAKI,GAEZ1B,KAAKuC,SAAS,CAAC9B,KAAKuC,M,+BAGd,IAAD,OACJ,OACI,yBAAK5C,UAAU,QACVJ,KAAKF,MAAMW,KAAKyC,KAAI,SAACtD,EAAIuD,GAAL,OACjB,yBAAK/C,UAAU,WAAW6C,IAAS,IAAJE,EAAS,GACnCvD,EAAIsD,KAAI,SAACrD,EAAIuD,GAAL,OACT,kBAAC,EAAD,CACIxD,IAAKuD,EACLhC,OAAQ,KACRtB,IAAKuD,EACLH,IAAS,GAAJE,EAAOC,EACZlD,QAASiD,IAAM,EAAKrD,MAAM+B,gBAAgBuB,IAAM,EAAKtD,MAAMgC,eAC3D3B,MAAOgD,IAAM,EAAKrD,MAAMiC,cAAcqB,IAAM,EAAKtD,MAAMkC,aACvDZ,SAAUvB,EAAIuB,SACdnB,UAAWJ,EAAII,UACfN,QAAS,EAAKF,qBAM1B,4BAAQE,QAASK,KAAK4C,YAAtB,aACA,4BAAQjD,QAASK,KAAK6C,UAAtB,WACA,4BAAQlD,QAASK,KAAK0C,WAAtB,cACA,4BAAQ/C,QAASK,KAAKoC,aAAtB,c,GArKG9B,IAAMC,WCEV8C,MARf,WACE,OACE,yBAAKjD,UAAU,OACb,kBAAC,EAAD,QCHNkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASC,eAAe,W","file":"static/js/main.42b69c3e.chunk.js","sourcesContent":["import React from 'react';\nimport '../stylesheets/Node.css';\nclass Node extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            \n        }\n    }\n    \n    handleClick=(e)=>{\n        this.props.onClick(this.props.row,this.props.col)\n    }\n    render(){\n        // {console.log('called')}\n            // if(isVisited) \n        // this.setState({isVisited:isVisited})\n        let extraClassname\n        // if(this.props.isVisited){\n        // extraClassname='visited'\n\n        // }\n        if(this.props.isVisited)\n            extraClassname=\"visited\"\n        if(this.props.isStart)\n            extraClassname=\"node-start\"\n        if(this.props.isEnd)\n            extraClassname=\"node-end\"\n\n        return(\n            <div className={`node ${extraClassname}`} id={`${this.props.row}-${this.props.col}`} onClick={this.handleClick}>\n            </div>\n        )\n    }\n}\nexport default Node;","\nexport function dykstra(grid,start_row,start_col,end_row,end_col){\n    var queue=[];\n    var order=[];\n    //Initialised the queue\n    for(let i=0;i<grid.length;i++)\n    {\n        for(let j=0;j<grid[0].length;j++){\n            grid[i][j].parent=null;\n            grid[i][j].distance=Infinity;\n            queue.push(grid[i][j]);\n        }\n    }\n    grid[start_row][start_col].distance=0;\n\n    while(queue.length)\n    {\n        queue.sort((a,b)=>{return a.distance>b.distance?1:-1})\n        var temp=queue[0];\n        queue.shift();\n        if(temp.row!==0&&temp.row!==grid.length-1)\n        {\n            if(temp.col===0)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else{\n            max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n            max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n        }\n        else if (temp.row===0) {\n            if(temp.col===0)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        } \n        else {\n            if(temp.col===0)\n            {\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        }\n        order.push(temp)\n        if(temp.row===end_row&&temp.col===end_col)\n            break;\n    }\n    // tem.sort((a,b)=>{\n    //     return a.first>b.first?1:-1;\n    // })\n    // console.log(order)\n    return order\n}\nfunction max(a,b){\n    if(a.distance>b.distance+1){\n        a.distance=b.distance+1\n        a.parent=b;\n    }\n}\n","import React from 'react';\nimport Node from './Node';\nimport '../stylesheets/Grid.css'\nimport {dykstra} from '../algorithms/dykstra'\nconst rows=25;\nvar start_node_row=10\nvar start_node_col=20\nvar end_node_row=23\nvar end_node_col=28   \nconst columns=50;\nclass Grid extends React.Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            grid:[],\n            set:null,\n            reset:false,\n            start_node_row:start_node_row,\n            start_node_col:start_node_col,\n            end_node_row: end_node_row,\n            end_node_col:end_node_col,\n        }\n        this.visualise=this.visualise.bind(this)\n        this.handleReset=this.handleReset.bind(this)\n        this.handleClick=this.handleClick.bind(this)\n        this.setToStart=this.setToStart.bind(this)\n        this.setToEnd=this.setToEnd.bind(this)\n\n    }\n    \n    handleClick=(row,col)=>{\n        if(!this.state.set) {\n            console.log(\"Choose what to set\")\n            return;\n        }\n        if(this.state.reset)\n        this.handleReset()\n        if(this.state.set===1){\n        var temp=this.state.grid;\n        temp[this.state.start_node_row][start_node_col].isStart=false\n        temp[row][col].isStart=true\n        document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node\"\n        document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).isStart=false\n        document.getElementById(`${row}-${col}`).className=\"node node-start\"\n        document.getElementById(`${row}-${col}`).isStart=true;\n        start_node_row=row\n        start_node_col=col\n        this.setState({start_node_row:row,start_node_col:col,grid:temp})\n        console.log(\"Clicked\")\n        }\n        else{\n            var temp=this.state.grid;\n        temp[this.state.end_node_row][end_node_col].isEnd=false\n        temp[row][col].isEnd=true\n        document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node\"\n        document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).isEnd=false\n        document.getElementById(`${row}-${col}`).className=\"node node-finish\"\n        document.getElementById(`${row}-${col}`).isEnd=true;\n        end_node_row=row\n        end_node_col=col\n        this.setState({end_node_row:row,end_node_col:col,grid:temp})\n        console.log(\"Clicked\")\n        }\n    }\n    visualise(){\n    if(this.state.reset)\n    {\n        this.handleReset();\n    }\n    this.setState({reset:true})\n    var temp=this.state.grid\n    const order=dykstra(temp,start_node_row,start_node_col,end_node_row,end_node_col);\n    \n        for(let i=0;i<=order.length;i++)\n       {\n       \n        if(i===order.length){\n            setTimeout(()=>{\n                var current=temp[end_node_row][end_node_col].parent\n                while(!current.isStart)\n                {\n                    console.log(current)\n                    document.getElementById(`${current.row}-${current.col}`).className=\"node path\"\n                    current=current.parent\n                }\n            },10*i)\n            return;\n         }\n        setTimeout(()=>{\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node visited\"\n            document.getElementById(`${start_node_row}-${start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${end_node_row}-${end_node_col}`).className=\"node node-end\"    \n        },10*i)\n        \n        // document.getElementById(`${order[i].row*10+order[i]}`).className=\"node node-vi\"\n       }\n       \n    }\n    setToStart(){\n        var temp =1\n        // e.style=\"background_color=green\"\n        this.setState({set:temp})\n    }\n    setToEnd(){\n        var temp =2\n        this.setState({set:temp})\n    }\n    handleReset(){\n        \n        var temp=this.state.grid;\n        const order=dykstra(temp,start_node_row,start_node_col,end_node_row,end_node_col);\n        if(order.length)\n        {\n        for(let i=order.length-1;i>=0;i--){\n        setTimeout(()=>{\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node\"\n            document.getElementById(`${start_node_row}-${start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${end_node_row}-${end_node_col}`).className=\"node node-end\"    \n        },10*i)\n        \n        // document.getElementById(`${order[i].row*10+order[i]}`).className=\"node node-vi\"\n       } \n        }\n    \n    }\n    componentDidMount(){//is called only once in the start\n        var g=[];\n        for(let row=0;row<rows;row++)\n        {\n            var temp=[];\n            for(let col=0;col<columns;col++){\n                    temp.push(\n                          {\n                            row:row, \n                            parent:null,\n                            col:col, \n                            key:row*10+col, \n                            isStart:row===this.state.start_node_row?(col===this.state.start_node_col?true:false):false,\n                            isEnd:row===this.state.end_node_row?(col===this.state.end_node_col?true:false):false,\n                            id:row*10+col,\n                            distance:Infinity,\n                            isVisited:false,\n                          } \n                    )    \n            }\n            g.push(temp)\n        }\n       this.setState({grid:g})\n    }\n    \n    render(){\n        return(\n            <div className=\"grid\">\n                {this.state.grid.map((row,idr)=>(\n                    <div className=\"grid-row\" key={idr*1000+1}>\n                        {row.map((col,idc)=>\n                        <Node\n                            row={idr} \n                            parent={null}\n                            col={idc}\n                            key={idr*10+idc} \n                            isStart={idr===this.state.start_node_row?(idc===this.state.start_node_col?true:false):false}\n                            isEnd={idr===this.state.end_node_row?(idc===this.state.end_node_col?true:false):false}\n                            distance={col.distance}\n                            isVisited={col.isVisited}\n                            onClick={this.handleClick}>\n                            </Node>\n                            \n                        )}\n                    </div>\n                ))}\n                <button onClick={this.setToStart}>Set Start</button>\n                <button onClick={this.setToEnd}>Set End</button>\n                <button onClick={this.visualise}> visualise</button>\n                <button onClick={this.handleReset}>Reset</button>\n            </div>\n        )\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport './stylesheets/App.css'\n\nimport Grid from './components/Grid';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}