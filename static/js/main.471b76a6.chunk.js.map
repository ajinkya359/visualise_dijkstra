{"version":3,"sources":["components/Node.js","components/Grid.js","algorithms/dykstra.js","App.js","index.js"],"names":["Node","props","handleEnter","e","onMouseEnter","row","col","click","onClick","state","extraClassname","this","isVisited","isStart","isEnd","className","id","onMouseDown","onMouseUp","React","Component","Grid","handleClick","set","reset","handleReset","temp","grid","start_node_row","start_node_col","document","getElementById","setState","end_node_row","end_node_col","weight","isWall","console","log","handleMouseEnter","isClicked","rows","columns","dijkistra","bind","a_star","setToStart","setToEnd","handleWall","handleMouseDown","handleMouserUp","resetWalls","setWeight","resetWeights","inputWeight","order","start_row","start_col","end_row","end_col","queue","i","length","j","parent","h","Math","sqrt","distance","Infinity","f","push","sort","a","b","shift","max1","setTimeout","number_of_nodes","current","innerHTML","max","dykstra","g","key","preventDefault","temp1","target","value","map","idr","idc","clicked","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.471b76a6.chunk.js","sourcesContent":["import React from 'react';\nimport '../stylesheets/Node.css';\nclass Node extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            \n        }\n    }\n    \n    handleEnter=(e)=>{\n        this.props.onMouseEnter(this.props.row,this.props.col)\n    }\n    click=(e)=>{\n        this.props.onClick(this.props.row,this.props.col)\n    }\n    render(){\n        // {console.log('called')}\n            // if(isVisited) \n        // this.setState({isVisited:isVisited})\n        let extraClassname\n        // if(this.props.isVisited){\n        // extraClassname='visited'\n\n        // }\n        if(this.props.isVisited)\n            extraClassname=\"visited\"\n        if(this.props.isStart)\n            extraClassname=\"node-start\"\n        if(this.props.isEnd)\n            extraClassname=\"node-end\"\n\n        return(\n            <div \n            className={`node ${extraClassname}`} \n            id={`${this.props.row}-${this.props.col}`} \n            onClick={this.click}\n            onMouseDown={this.props.onMouseDown}\n            onMouseUp={this.props.onMouseUp}\n            onMouseEnter={this.handleEnter} >\n            </div>\n        )\n    }\n}\nexport default Node;","import React from 'react';\nimport Node from './Node';\nimport '../stylesheets/Grid.css'\nimport {dykstra,a_star} from '../algorithms/dykstra'\nconst rows=50;  \nconst columns=50;\nclass Grid extends React.Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            grid:[],\n            rows:rows,\n            columns:columns,\n            set:null,\n            reset:false,\n            start_node_row:10,\n            start_node_col:20,\n            end_node_row: 22,\n            end_node_col:40,\n            isClicked:false,\n            weight:10\n        }\n        this.dijkistra=this.dijkistra.bind(this)\n        this.a_star=this.a_star.bind(this)\n\n        this.handleReset=this.handleReset.bind(this)\n        this.handleClick=this.handleClick.bind(this)\n        this.setToStart=this.setToStart.bind(this)\n        this.setToEnd=this.setToEnd.bind(this)\n        this.handleWall=this.handleWall.bind(this)\n        this.handleMouseDown=this.handleMouseDown.bind(this)\n        this.handleMouserUp=this.handleMouserUp.bind(this)\n        this.handleMouseEnter=this.handleMouseEnter.bind(this)\n        this.resetWalls=this.resetWalls.bind(this)\n        this.setWeight=this.setWeight.bind(this)\n        this.resetWeights=this.resetWeights.bind(this)\n        this.inputWeight=this.inputWeight.bind(this)\n\n\n    }\n    \n    handleClick=(row,col)=>{\n        if(!this.state.set) {\n            console.log(\"Choose what to set\")\n            return;\n        }\n        if(this.state.reset)\n        this.handleReset()\n        if(this.state.set===1){\n        var temp=this.state.grid;\n        temp[this.state.start_node_row][this.state.start_node_col].isStart=false\n        temp[row][col].isStart=true\n        document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node\"\n        document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).isStart=false\n        document.getElementById(`${row}-${col}`).className=\"node node-start\"\n        document.getElementById(`${row}-${col}`).isStart=true;\n        this.setState({start_node_row:row,start_node_col:col,grid:temp})\n        }\n        else if(this.state.set===2){\n        temp=this.state.grid;\n        if(this.state.end_node_row&&this.state.end_node_col)\n        temp[this.state.end_node_row][this.state.end_node_col].isEnd=false\n        temp[row][col].isEnd=true\n        document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node\"\n        document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).isEnd=false\n        document.getElementById(`${row}-${col}`).className=\"node node-finish\"\n        document.getElementById(`${row}-${col}`).isEnd=true;\n        this.setState({end_node_row:row,end_node_col:col,grid:temp})\n        }\n        else if(this.state.set===4)\n        {\n            if((row===this.state.start_node_row&&col===this.state.start_node_col)||(row===this.state.end_node_row&&col===this.state.end_node_col)) \n            return\n        temp=this.state.grid;\n        if(temp[row][col].weight===1){\n        temp[row][col].weight=this.state.weight;\n        document.getElementById(`${row}-${col}`).className=\"node weight\"\n        this.setState({grid:temp})\n    }\n        else{\n          temp[row][col].weight=1;\n          document.getElementById(`${row}-${col}`).className=\"node\"\n          this.setState({grid:temp})\n        }\n        }\n        else{\n            if((row===this.state.start_node_row&&col===this.state.start_node_col)||(row===this.state.end_node_row&&col===this.state.end_node_col)) \n            return\n        temp=this.state.grid;\n        if(!temp[row][col].isWall){\n        temp[row][col].isWall=true;\n        document.getElementById(`${row}-${col}`).className=\"node wall\"\n        this.setState({grid:temp})\n    }\n        else{\n          temp[row][col].isWall=false;\n          document.getElementById(`${row}-${col}`).className=\"node\"\n          this.setState({grid:temp})\n        }\n        \n    }\n    }\n    a_star(){\n        this.setState({set:-1})\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        document.getElementById('set-wall').className=\"\"\n    if(this.state.reset)\n    {\n        this.handleReset();\n    }\n    var temp=this.state.grid\n    const order=a_star(temp,this.state.start_node_row,this.state.start_node_col,this.state.end_node_row,this.state.end_node_col);\n        for(let i=0;i<=order.length;i++)\n       {\n       \n        if(i===order.length){\n            setTimeout(()=>{\n                var number_of_nodes=0\n\n                var current=temp[this.state.end_node_row][this.state.end_node_col].parent\n                while(current&&!current.isStart)\n                {\n                    document.getElementById(`${current.row}-${current.col}`).className=\"node path\"\n                    current=current.parent\n                    if(!current){\n                        break;\n                    }\n                    number_of_nodes+=current.weight;\n                }\n                if(current===null){\n                    document.getElementById('number-of-nodes').innerHTML=\"no path found\"\n                    return;\n                }\n                if(current.isStart)\n                document.getElementById('number-of-nodes').innerHTML=`Total Distance Travelled = ${number_of_nodes}`\n            },10*i)\n            return;\n         }\n        setTimeout(()=>{\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node visited\"\n            if(temp[order[i].row][order[i].col].weight!==1)\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node weight\"\n            document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node node-end\"    \n        },10*i)\n        \n        // document.getElementById(`${order[i].row*10+order[i]}`).className=\"node node-vi\"\n       }\n       this.setState({reset:true})\n\n       \n    }\n    dijkistra(){\n        this.setState({set:-1})\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        document.getElementById('set-wall').className=\"\"\n    if(this.state.reset)\n    {\n        this.handleReset();\n    }\n    var temp=this.state.grid\n    const order=dykstra(temp,this.state.start_node_row,this.state.start_node_col,this.state.end_node_row,this.state.end_node_col);\n        for(let i=0;i<=order.length;i++)\n       {\n       \n        if(i===order.length){\n            var number_of_nodes=0\n            setTimeout(()=>{\n                var current=temp[this.state.end_node_row][this.state.end_node_col].parent\n                while(current&&!current.isStart)\n                {\n                    document.getElementById(`${current.row}-${current.col}`).className=\"node path\"\n                    current=current.parent\n                    if(!current){\n                        break;\n                    }\n                    number_of_nodes+=current.weight;\n                }\n                if(current===null){\n                    document.getElementById('number-of-nodes').innerHTML=\"no path found\"\n                    return;\n                }\n                if(current.isStart)\n                document.getElementById('number-of-nodes').innerHTML=`Total Distance Travelled = ${number_of_nodes}`\n            },10*i)\n\n            return;\n         }\n        setTimeout(()=>{\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node visited\"\n            if(temp[order[i].row][order[i].col].weight!==1)\n            document.getElementById(`${order[i].row}-${order[i].col}`).className=\"node weight\"\n            document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node node-end\"    \n        },10*i)\n        \n        // document.getElementById(`${order[i].row*10+order[i]}`).className=\"node node-vi\"\n       }\n       this.setState({reset:true})\n\n       \n    }\n    resetWeights(){\n        this.setState({set:-1})\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        var temp=this.state.grid;\n        \n        for(let i=temp.length-1;i>=0;i--){\n        for(let j=0;j<temp[0].length;j++){\n        setTimeout(()=>{\n            if(temp[i][j].isWall===false)\n            document.getElementById(`${temp[i][j].row}-${temp[i][j].col}`).className=\"node\"\n            temp[i][j].weight=1\n            document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node node-end\"    \n        },10*j)\n    }\n        }    \n        this.setState({grid:temp})\n    }\n    resetWalls(){\n        this.setState({set:-1})\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        var temp=this.state.grid;\n        \n        for(let i=temp.length-1;i>=0;i--){\n        for(let j=0;j<temp[0].length;j++){\n        setTimeout(()=>{\n            if(temp[i][j].weight!==1) return\n            document.getElementById(`${temp[i][j].row}-${temp[i][j].col}`).className=\"node\"\n            temp[i][j].isWall=false\n            document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node node-end\"    \n        },10*j)\n    }\n        }    \n        this.setState({grid:temp})\n}\n    setToStart(){\n        document.getElementById('set-start').className=\"clicked\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        var temp =1\n        // e.style=\"background_color=green\"\n        this.setState({set:temp})\n    }\n    setWeight(){\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"clicked\"\n\n        var temp =4\n        this.setState({set:temp})\n        \n    }\n    setToEnd(){\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"clicked\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        var temp =2\n        this.setState({set:temp})\n    }\n    handleWall(){\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"\"\n        document.getElementById('set-wall').className=\"clicked\"\n        document.getElementById('set-weight').className=\"\"\n\n\n        var temp=3;\n        this.setState({set:temp})\n    }\n    handleMouseDown(){\n        var temp=this.state.isClicked;\n        if(temp===false) temp=true\n        this.setState({isClicked:temp})\n    }\n    handleMouserUp(){\n        var temp=this.state.isClicked\n        if(temp) temp=false\n        this.setState({isClicked:temp})\n    }\n    handleMouseEnter=(row,col)=>{\n        if(this.state.isClicked&&this.state.set===3)\n        { \n            if((row===this.state.start_node_row&&col===this.state.start_node_col)||(row===this.state.end_node_row&&col===this.state.end_node_col)) \n            return;\n        var temp=this.state.grid;\n        if(!temp[row][col].isWall){\n        temp[row][col].isWall=true;\n        document.getElementById(`${row}-${col}`).className=\"node wall\"\n        this.setState({grid:temp})\n    }\n        else{\n          temp[row][col].isWall=false;\n          document.getElementById(`${row}-${col}`).className=\"node\"\n          this.setState({grid:temp})\n        }\n        }\n    }\n    handleReset(){\n        this.setState({set:-1})\n        document.getElementById('set-start').className=\"\"\n        document.getElementById('set-end').className=\"\"\n        document.getElementById('set-reset').className=\"clicked\"\n        document.getElementById('set-wall').className=\"\"\n        document.getElementById('set-weight').className=\"\"\n\n        var temp=this.state.grid;\n        \n        for(let i=temp.length-1;i>=0;i--){\n        for(let j=0;j<temp[0].length;j++){\n        setTimeout(()=>{\n            if(temp[i][j].isWall||temp[i][j].weight!==1) return;\n            document.getElementById(`${temp[i][j].row}-${temp[i][j].col}`).className=\"node\"\n            document.getElementById(`${this.state.start_node_row}-${this.state.start_node_col}`).className=\"node node-start\"\n            document.getElementById(`${this.state.end_node_row}-${this.state.end_node_col}`).className=\"node node-end\"    \n        },10*j)}\n        \n        // document.getElementById(`${order[i].row*10+order[i]}`).className=\"node node-vi\"\n       } \n        \n    \n    }\n    componentDidMount(){//is called only once in the start\n        var g=[];\n        for(let row=0;row<this.state.rows;row++)\n        {\n            var temp=[];\n            for(let col=0;col<this.state.columns;col++){\n                    temp.push(\n                          {\n                            row:row,\n                            isWall:false, \n                            parent:null,\n                            col:col, \n                            key:row*10+col, \n                            isStart:row===this.state.start_node_row?(col===this.state.start_node_col?true:false):false,\n                            isEnd:row===this.state.end_node_row?(col===this.state.end_node_col?true:false):false,\n                            id:row*10+col,\n                            distance:Infinity,\n                            isVisited:false,\n                            weight:1,\n                          } \n                    )    \n            }\n            g.push(temp)\n        }\n       this.setState({grid:g})\n    }\n    // changeRows(e){\n    //     e.preventDefault();\n    //     console.log(e.target.in.value)\n    //     var g=[];\n    //     for(let row=0;row<e.target.in.value;row++)\n    //     {\n    //         var temp=[];\n    //         for(let col=0;col<this.state.columns;col++){\n    //                 temp.push(\n    //                       {\n    //                         row:row,\n    //                         isWall:false, \n    //                         parent:null,\n    //                         col:col, \n    //                         key:row*10+col, \n    //                         isStart:false,\n    //                         isEnd:false,\n    //                         id:row*10+col,\n    //                         distance:Infinity,\n    //                         isVisited:false,\n    //                       } \n    //                 )    \n    //         }\n    //         g.push(temp)\n    //     }\n    //    this.setState({grid:g,rows:e.target.in.value,start_node_row:0,start_node_col:0,end_node_row:0,end_node_col:0})\n    // }\n    inputWeight(e){\n        e.preventDefault();\n        var temp1=e.target.weight.value\n        this.setState({weight:temp1})\n        var temp=this.state.grid;\n        for(let i=0;i<this.state.row;i++)\n        {\n            for(let j=0;j<this.state.col;j++)\n            {\n                if(temp[i][j].weight!==1)\n                    temp[i][j].weight=temp1;\n            }\n        }\n        this.setState({grid:temp})\n        console.log(this.state.weight)\n    }\n\n    render(){\n        return(\n            <div className=\"grid\">\n                      <header>Dijkstra's algorithm</header>\n                    <h3 id=\"number-of-nodes\">Total Distance Travelled = 0</h3>\n                {this.state.grid.map((row,idr)=>(\n                    <div className=\"grid-row\" key={idr*1000+1}>\n                        {row.map((col,idc)=>\n                        <Node\n                            row={idr} \n                            parent={null}\n                            col={idc}\n                            weight={col.weight}\n                            key={idr*10+idc} \n                            isStart={idr===this.state.start_node_row?(idc===this.state.start_node_col?true:false):false}\n                            isEnd={idr===this.state.end_node_row?(idc===this.state.end_node_col?true:false):false}\n                            distance={col.distance}\n                            isVisited={col.isVisited}\n                            onClick={this.handleClick}\n                            onMouseDown={this.handleMouseDown}\n                            onMouseUp={this.handleMouserUp}\n                            onMouseEnter={this.handleMouseEnter}>\n                            </Node>\n                            \n                        )}\n                    </div>\n                ))}\n                <button onClick={this.setToStart} clicked={false} id=\"set-start\">Set Start</button>\n                <button onClick={this.setToEnd} clicked={false} id=\"set-end\">Set End</button>\n                <button onClick={this.dijkistra} clicked={false} >Dijkistra</button>\n                <button onClick={this.a_star} clicked={false} >A*</button>\n\n                <button onClick={this.handleWall} clicked={false} id=\"set-wall\">Add Wall</button>\n                <button onClick={this.setWeight} clicked={false} id=\"set-weight\">Set Weight</button>\n                <br/>\n                <button onClick={this.resetWeights} >Reset Weights</button>\n                <br/>\n                <button onClick={this.resetWalls} >Reset Walls</button>\n                        <br/>\n\n                <button onClick={this.handleReset} clicked={false} id=\"set-reset\">Reset</button>\n\n\n                {/* <form onSubmit={this.inputWeight}>\n                <input name=\"weight\" type=\"number\" placeholder={this.state.weight}/>\n                </form> */}\n            </div>\n        )\n    }\n}\n\nexport default Grid;","export function dykstra(grid,start_row,start_col,end_row,end_col){\n    var queue=[];\n    var order=[];\n    //Initialised the queue\n    for(let i=0;i<grid.length;i++)\n    {\n        for(let j=0;j<grid[0].length;j++){\n            grid[i][j].parent=null;\n            grid[i][j].distance=Infinity;\n            queue.push(grid[i][j]);\n        }\n    }\n    grid[start_row][start_col].distance=0;\n\n    while(queue.length)\n    {\n        queue.sort((a,b)=>{return a.distance>b.distance?1:-1})\n        var temp=queue[0];\n        queue.shift();\n        if(temp.isWall||temp.distance===Infinity) continue;\n        if(temp.row!==0&&temp.row!==grid.length-1)\n        {\n            if(temp.col===0)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else{\n            max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n            max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n        }\n        else if (temp.row===0) {\n            if(temp.col===0)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        } \n        else {\n            if(temp.col===0)\n            {\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        }\n        order.push(temp)\n\n        if(temp.row===end_row&&temp.col===end_col)\n        {\n            \n            break;}\n    }\n    function max(a,b){\n        if(a.distance>b.distance+b.weight){\n            a.distance=b.distance+b.weight\n            a.parent=b;\n        }\n    }\n    // tem.sort((a,b)=>{\n    //     return a.first>b.first?1:-1;\n    // })\n    // console.log(order)\n    \n    return order\n}\nexport function a_star(grid,start_row,start_col,end_row,end_col){\n    var queue=[];\n    var order=[];\n    //Initialised the queue\n    for(let i=0;i<grid.length;i++)\n    {\n        for(let j=0;j<grid[0].length;j++){\n            grid[i][j].parent=null;\n            grid[i][j].h=Math.sqrt((end_row-grid[i][j].row)*(end_row-grid[i][j].row)+(end_col-grid[i][j].col)*(end_col-grid[i][j].col))\n            grid[i][j].distance=Infinity;\n            grid[i][j].f=Infinity\n            queue.push(grid[i][j]);\n        }\n    }\n    grid[start_row][start_col].distance=0;\n    grid[start_row][start_col].f=grid[start_row][start_col].h\n    while(queue.length)\n    {\n        queue.sort((a,b)=>{return a.f>b.f?1:-1})\n        var temp=queue[0];\n        queue.shift();\n        if(temp.isWall||temp.distance===Infinity) continue;\n        if(temp.row!==0&&temp.row!==grid.length-1)\n        {\n            if(temp.col===0)\n            {\n                max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n                max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n            else{\n            max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n            max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n            }\n        }\n        else if (temp.row===0) {\n            if(temp.col===0)\n            {\n                max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max1(grid[temp.row+1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        } \n        else {\n            if(temp.col===0)\n            {\n                max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n            }\n            else if(temp.col===grid[0].length-1)\n            {\n                max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n            else{\n                max1(grid[temp.row-1][temp.col],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col+1],grid[temp.row][temp.col])\n                max1(grid[temp.row][temp.col-1],grid[temp.row][temp.col])\n            }\n        }\n        order.push(temp)\n\n        if(temp.row===end_row&&temp.col===end_col)\n        {\n            \n            break;}\n    }\n    // tem.sort((a,b)=>{\n    //     return a.first>b.first?1:-1;\n    // })\n    // console.log(order)\n    function max1(a,b){\n        if(a.f>b.distance+a.h+b.weight){\n            a.distance=b.distance+b.weight\n            a.f=a.distance+a.h\n            a.parent=b;\n    \n        }\n    }\n    return order\n}\n\n\n\n","import React from 'react';\nimport './stylesheets/App.css'\n\nimport Grid from './components/Grid';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './stylesheets/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}